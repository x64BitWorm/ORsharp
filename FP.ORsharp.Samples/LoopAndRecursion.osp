# Рекурсия против оптимизированной рекурсии
Обратим внимание - обычная рекурсия работает долго и причина этому долгое развертывание ленивых параметров,
этот момент исправлен в оптимизированной версии функции (символ ! вычисляет параметр перед передачей).
(Отметим, что while и if это не операторы языка,
а также написанные встроенные функции наравне с print, а логика if и while тут реализована благодаря возможностям
ленивых параметров).
#,

recursionSum = (x ->
	if (equal x 0) (
		0
	) (
		plus x (recursionSum (minus x 1))
	)
),

fastRecursionSum = (x ->
	if (equal x 0) (
		0
	) (
		plus x (fastRecursionSum !(minus x 1))
	)
),

print "Recursion test",
t <- (recursionSum 1000),
print t,
print "Fast recursion test",
t <- (fastRecursionSum 1000),
print t,
0
